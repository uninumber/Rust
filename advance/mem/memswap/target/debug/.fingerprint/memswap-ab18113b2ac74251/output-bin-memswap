{"message":"invalid `struct` delimiters or `fn` call arguments","code":null,"level":"error","spans":[{"file_name":"src/main.rs","byte_start":149,"byte_end":164,"line_start":14,"line_end":14,"column_start":17,"column_end":32,"is_primary":true,"text":[{"text":"    let mut x = Something(x: 2);","highlight_start":17,"highlight_end":32}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"if `Something` is a struct, use braces as delimiters","code":null,"level":"help","spans":[{"file_name":"src/main.rs","byte_start":158,"byte_end":159,"line_start":14,"line_end":14,"column_start":26,"column_end":27,"is_primary":true,"text":[{"text":"    let mut x = Something(x: 2);","highlight_start":26,"highlight_end":27}],"label":null,"suggested_replacement":" { ","suggestion_applicability":"MaybeIncorrect","expansion":null},{"file_name":"src/main.rs","byte_start":163,"byte_end":164,"line_start":14,"line_end":14,"column_start":31,"column_end":32,"is_primary":true,"text":[{"text":"    let mut x = Something(x: 2);","highlight_start":31,"highlight_end":32}],"label":null,"suggested_replacement":" }","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null},{"message":"if `Something` is a function, use the arguments directly","code":null,"level":"help","spans":[{"file_name":"src/main.rs","byte_start":159,"byte_end":162,"line_start":14,"line_end":14,"column_start":27,"column_end":30,"is_primary":true,"text":[{"text":"    let mut x = Something(x: 2);","highlight_start":27,"highlight_end":30}],"label":null,"suggested_replacement":"","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: invalid `struct` delimiters or `fn` call arguments\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/main.rs:14:17\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m14\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    let mut x = Something(x: 2);\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: if `Something` is a struct, use braces as delimiters\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m14\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    let mut x = Something\u001b[0m\u001b[0m\u001b[38;5;10m { \u001b[0m\u001b[0mx: 2\u001b[0m\u001b[0m\u001b[38;5;10m }\u001b[0m\u001b[0m;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                           \u001b[0m\u001b[0m\u001b[38;5;10m~\u001b[0m\u001b[0m      \u001b[0m\u001b[0m\u001b[38;5;10m~\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: if `Something` is a function, use the arguments directly\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m14\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;9m- \u001b[0m\u001b[0m    let mut x = Something(\u001b[0m\u001b[0m\u001b[38;5;9mx: \u001b[0m\u001b[0m2);\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m14\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;10m+ \u001b[0m\u001b[0m    let mut x = Something(2);\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\n"}
{"message":"invalid `struct` delimiters or `fn` call arguments","code":null,"level":"error","spans":[{"file_name":"src/main.rs","byte_start":182,"byte_end":204,"line_start":15,"line_end":15,"column_start":17,"column_end":39,"is_primary":true,"text":[{"text":"    let mut b = Anothersomething(z: 4);","highlight_start":17,"highlight_end":39}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"if `Anothersomething` is a struct, use braces as delimiters","code":null,"level":"help","spans":[{"file_name":"src/main.rs","byte_start":198,"byte_end":199,"line_start":15,"line_end":15,"column_start":33,"column_end":34,"is_primary":true,"text":[{"text":"    let mut b = Anothersomething(z: 4);","highlight_start":33,"highlight_end":34}],"label":null,"suggested_replacement":" { ","suggestion_applicability":"MaybeIncorrect","expansion":null},{"file_name":"src/main.rs","byte_start":203,"byte_end":204,"line_start":15,"line_end":15,"column_start":38,"column_end":39,"is_primary":true,"text":[{"text":"    let mut b = Anothersomething(z: 4);","highlight_start":38,"highlight_end":39}],"label":null,"suggested_replacement":" }","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null},{"message":"if `Anothersomething` is a function, use the arguments directly","code":null,"level":"help","spans":[{"file_name":"src/main.rs","byte_start":199,"byte_end":202,"line_start":15,"line_end":15,"column_start":34,"column_end":37,"is_primary":true,"text":[{"text":"    let mut b = Anothersomething(z: 4);","highlight_start":34,"highlight_end":37}],"label":null,"suggested_replacement":"","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: invalid `struct` delimiters or `fn` call arguments\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/main.rs:15:17\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m15\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    let mut b = Anothersomething(z: 4);\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: if `Anothersomething` is a struct, use braces as delimiters\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m15\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    let mut b = Anothersomething\u001b[0m\u001b[0m\u001b[38;5;10m { \u001b[0m\u001b[0mz: 4\u001b[0m\u001b[0m\u001b[38;5;10m }\u001b[0m\u001b[0m;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                  \u001b[0m\u001b[0m\u001b[38;5;10m~\u001b[0m\u001b[0m      \u001b[0m\u001b[0m\u001b[38;5;10m~\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: if `Anothersomething` is a function, use the arguments directly\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m15\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;9m- \u001b[0m\u001b[0m    let mut b = Anothersomething(\u001b[0m\u001b[0m\u001b[38;5;9mz: \u001b[0m\u001b[0m4);\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m15\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;10m+ \u001b[0m\u001b[0m    let mut b = Anothersomething(4);\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\n"}
{"message":"aborting due to 2 previous errors","code":null,"level":"error","spans":[],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: aborting due to 2 previous errors\u001b[0m\n\n"}
